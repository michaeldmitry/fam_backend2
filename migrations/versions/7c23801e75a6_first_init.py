"""first init

Revision ID: 7c23801e75a6
Revises: 
Create Date: 2021-01-22 15:59:27.171398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7c23801e75a6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brand_name'), 'brand', ['name'], unique=True)
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('role', sa.String(length=10), nullable=True),
    sa.Column('supplier_balance', sa.Float(), nullable=True),
    sa.Column('customer_balance', sa.Float(), nullable=True),
    sa.Column('amount_to_pay', sa.Float(), nullable=True),
    sa.Column('amount_to_get_paid', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_name'), 'client', ['name'], unique=True)
    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warehouse_name'), 'warehouse', ['name'], unique=True)
    op.create_table('payment_customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_type', sa.Boolean(), nullable=True),
    sa.Column('official_id', sa.BigInteger(), nullable=True),
    sa.Column('unofficial_id', sa.BigInteger(), nullable=True),
    sa.Column('representative_name', sa.String(length=64), nullable=True),
    sa.Column('representative_number', sa.String(length=13), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('paid', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchase_official_id'), 'purchase', ['official_id'], unique=False)
    op.create_index(op.f('ix_purchase_unofficial_id'), 'purchase', ['unofficial_id'], unique=False)
    op.create_table('return_purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_return_purchase_date'), 'return_purchase', ['date'], unique=False)
    op.create_table('return_sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_return_sale_date'), 'return_sale', ['date'], unique=False)
    op.create_table('sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('paid', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subcategory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subcategory_name'), 'subcategory', ['name'], unique=True)
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('part_number', sa.String(length=20), nullable=True),
    sa.Column('store_qt', sa.Integer(), nullable=True),
    sa.Column('store_loc', sa.String(length=50), nullable=True),
    sa.Column('preorder_level', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=50), nullable=True),
    sa.Column('replacement', sa.String(length=50), nullable=True),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price_per_item', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sale.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_customer_return',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price_per_item', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('return_sale_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['return_sale_id'], ['return_sale.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price_per_item', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('purchase_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_supplier_return',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price_per_item', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('return_purchase_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['return_purchase_id'], ['return_purchase.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_warehouse',
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'warehouse_id')
    )
    op.create_table('reallocation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('from_loc', sa.String(length=50), nullable=True),
    sa.Column('to_loc', sa.String(length=50), nullable=True),
    sa.Column('from_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('to_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reallocation')
    op.drop_table('product_warehouse')
    op.drop_table('order_supplier_return')
    op.drop_table('order_supplier')
    op.drop_table('order_customer_return')
    op.drop_table('order_customer')
    op.drop_table('product')
    op.drop_index(op.f('ix_subcategory_name'), table_name='subcategory')
    op.drop_table('subcategory')
    op.drop_table('sale')
    op.drop_index(op.f('ix_return_sale_date'), table_name='return_sale')
    op.drop_table('return_sale')
    op.drop_index(op.f('ix_return_purchase_date'), table_name='return_purchase')
    op.drop_table('return_purchase')
    op.drop_index(op.f('ix_purchase_unofficial_id'), table_name='purchase')
    op.drop_index(op.f('ix_purchase_official_id'), table_name='purchase')
    op.drop_table('purchase')
    op.drop_table('payment_supplier')
    op.drop_table('payment_customer')
    op.drop_index(op.f('ix_warehouse_name'), table_name='warehouse')
    op.drop_table('warehouse')
    op.drop_index(op.f('ix_client_name'), table_name='client')
    op.drop_table('client')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_brand_name'), table_name='brand')
    op.drop_table('brand')
    # ### end Alembic commands ###
